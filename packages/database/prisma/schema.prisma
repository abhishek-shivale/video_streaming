generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  videos    Video[]
}

model Video {
  id            String        @id @unique @default(uuid())
  name          String
  description   String?       @db.Text
  rawVideoUrl   String
  thumbnailUrl  String?
  shareableLink String        @unique
  duration      Int?
  status        ProcessStatus @default(UPLOADED)
  uploadedAt    DateTime      @default(now())
  processedAt   DateTime?
  user          User          @relation(fields: [userId], references: [id])
  userId        String
  qualities     Quality?
}

enum ProcessStatus {
  UPLOADED
  PROCESSING
  COMPLETED
  FAILED
}

model Quality {
  id                 String    @id @unique @default(uuid())
  q_144p             String?
  q_240p             String?
  q_360p             String?
  q_480p             String?
  q_720p             String?
  q_1080p            String?
  q_1440p            String?
  q_2160p            String?
  processStartedAt   DateTime  @default(now())
  processCompletedAt DateTime?
  sourceFormat       String?
  codec              String?
  video              Video     @relation(fields: [videoId], references: [id])
  videoId            String    @unique
}

model VideoView {
  id        String   @id @unique @default(uuid())
  videoId   String
  timestamp DateTime @default(now())
  ip        String?
  userAgent String?

  @@index([videoId, timestamp])
}
